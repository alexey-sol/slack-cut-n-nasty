type AuthProvider {
    id: Int!
    provider: String!
}

type UserDetails {
    displayName: String!
    fullName: String!
    id: Int!
    imageUrl: String
}

type User {
    date: DateMeta!
    details: UserDetails!
    email: String!
    id: Int!
    joinedWorkspaces: [Workspace!]!
    ownWorkspaces: [Workspace!]!
    provider: AuthProvider!
}

input CreateUserDetailsInput {
    displayName: String
    fullName: String!
    imageUrl: String
}

input CreateUserInput {
    email: String!
    details: CreateUserDetailsInput!
    provider: String!
}

input UpdateUserDetailsInput {
    displayName: String
    fullName: String
    imageUrl: String
}

input UpdateUserInput {
    email: String
    details: UpdateUserDetailsInput
    provider: String
}

type Query {
    user(id: Int, email: String): User
    users: [User!]!
}

type Mutation {
    createUser(input: CreateUserInput!): User!
    updateUser(id: Int!, input: UpdateUserInput!): User!
    deleteUser(id: Int!): DeletionSuccess!
}
